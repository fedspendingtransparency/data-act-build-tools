---
- hosts: "localhost"
  user: ec2-user
  become_method: sudo

  vars:

    ansible_python_interpreter: /usr/bin/python

    APP: "{{ APP }}"
    BRANCH: "{{ BRANCH }}"

    apps:
      broker: {app_long: broker, app_short: API}
      validator: {app_long: validator, app_short: Val}

    # Domains are used for SSL cert identification
    envs:
      master:  {env_long: prod,    domain: 'broker-api.usaspending.gov' }
      staging: {env_long: staging, domain: 'broker-staging-api.usaspending.gov' }
      dev:     {env_long: dev,     domain: 'broker-dev-api.usaspending.gov' }
      sandbox: {env_long: sandbox, domain: 'broker-sandbox-api.usaspending.gov'}

  tasks:

    - name: copy core config
      copy:
        src:  "/data-act/config/backend/config.yml"
        dest: "/data-act/backend/dataactcore/config.yml"
        remote_src: true

    - name: copy environmental config
      copy:
        src:  "/data-act/config/backend/{{ vars['envs'][BRANCH]['env_long'] }}_config.yml"
        dest: "/data-act/backend/dataactcore/{{ vars['envs'][BRANCH]['env_long'] }}_config.yml"
        remote_src: true

 # config/filebeat/filebeat.yml

    - name: copy filebeat config
      become: true
      copy:
        src: "/data-act/config/filebeat/filebeat-broker.yml"
        dest: "/etc/filebeat/filebeat.yml"
        remote_src: true

    - name: update filebeat config to set correct index (broker)
      when: APP == "broker"
      become: true
      replace:
        dest: "/etc/filebeat/filebeat.yml"
        regexp: 'index: placeholder'
        replace: "index: broker-api-{{ vars['envs'][BRANCH]['env_long'] }}"

    - name: update filebeat config to set correct index (val)
      when: APP == "validator"
      become: true
      replace:
        dest: "/etc/filebeat/filebeat.yml"
        regexp: 'index: placeholder'
        replace: "index: broker-val-{{ vars['envs'][BRANCH]['env_long'] }}"

# Nginx

    - name: copy broker nginx config
      when: APP == "broker"
      become: true
      copy:
        src: "/data-act/config/nginx/nginx_broker_api.conf"
        dest: "/etc/nginx/nginx.conf"
        remote_src: true

    - name: update nginx config to set correct server_name
      when: APP == "broker"
      become: true
      replace:
        dest: "/etc/nginx/nginx.conf"
        regexp: 'server_name INSERT_WITH_ANSIBLE;'
        replace: "server_name {{ vars['envs'][BRANCH]['domain'] }};"

    - name: download secrets from S3 bucket
      become: true
      shell: "aws s3 cp s3://da-config/broker/{{ vars['envs'][BRANCH]['env_long'] }}_secrets.yml /data-act/backend/dataactcore/ --region us-gov-west-1"


# SSL Certs (not used for Validator)

    - name: copy public.pem from S3 Bucket
      when: APP == "broker"
      become: true
      shell: "aws s3 cp s3://usaspending-ssl/{{ vars['envs'][BRANCH]['domain'] }}/public.pem /etc/cert.pem --region us-gov-west-1"

    - name: copy private.pem from S3 Bucket
      when: APP == "broker"
      become: true
      shell: "aws s3 cp s3://usaspending-ssl/{{ vars['envs'][BRANCH]['domain'] }}/private.pem /etc/cert.key --region us-gov-west-1"

    - name: assign ownership of cert.pem to ec2-user
      when: APP == "broker"
      become: true
      file: path=/etc/cert.pem owner=ec2-user

    - name: assign ownership of cert.key to ec2-user
      when: APP == "broker"
      become: true
      file: path=/etc/cert.key owner=ec2-user


# TODO: Assess this weird ownership redundancy with instance-image.yml

    - name: assign ownership of api to ec2-user
      become: true
      file: path=/data-act owner=ec2-user recurse=yes

    - name: assign ownership of api to ec2-user
      become: true
      file: path=/tmp owner=ec2-user recurse=yes

    - name: add single-interpreter to uwsgi.ini for broker-api
      become: true
      ini_file:
        dest: "/data-act/backend/dataactbroker/config/uwsgi.ini"
        section: "uwsgi"
        option: single-interpreter
        value: true

    - name: modify supervisord configuration -- /tmp/stats.socket
      ini_file:
        dest: "/data-act/backend/dataactbroker/config/supervisord.conf"
        section: "program:uwsgi"
        option: command
        value: "uwsgi --ini /data-act/backend/dataactbroker/config/uwsgi.ini --socket :3030 --stats /tmp/stats.socket"

    - name: modify supervisord configuration -- PYTHONPATH
      ini_file:
        dest: "/data-act/backend/dataactbroker/config/supervisord.conf"
        section: "program:uwsgi"
        option: environment
        value: "PYTHONPATH=%(ENV_PATH)s:/data-act/backend"

    ###### New Relic - Validator ######

    - name: modify supervisord configuration -- command (app)
      ini_file:
        dest: "/data-act/backend/dataactvalidator/config/supervisord.conf"
        section: "program:data_act_validator_app"
        option: command
        value: "/usr/bin/python3.5 /data-act/backend/dataactvalidator/app.py"

    - name: modify supervisord configuration -- command (hc)
      ini_file:
        dest: "/data-act/backend/dataactvalidator/config/supervisord.conf"
        section: "program:data_act_validator_health_check"
        option: command
        value: "/usr/bin/python3.5 /data-act/backend/dataactvalidator/health_check.py"

    - name: modify supervisord configuration -- PYTHONPATH
      ini_file:
        dest: "/data-act/backend/dataactvalidator/config/supervisord.conf"
        section: "supervisord"
        option: environment
        value: "PYTHONPATH=%(ENV_PATH)s:/data-act/backend"


# Supervisord Service

    - name: make supervisord.service directory
      become: true
      file:
        path: /etc/supervisord/conf.d
        recurse: true
        state: directory

    - name: supervisord.service conf
      become: true
      shell: echo_supervisord_conf > /etc/supervisord/supervisord.conf

    - name: supervisord.service conf.d append
      become: true
      shell: echo "files = conf.d/*.conf" >> /etc/supervisord/supervisord.conf

    - name: supervisord.service config file location (validator)
      when: APP == 'validator'
      become: true
      replace:
        dest: "/data-act/config/supervisord.service/supervisord.service"
        regexp: 'ExecStart=/bin/supervisord.*'
        replace: "ExecStart=/bin/supervisord -c /data-act/backend/dataactvalidator/config/supervisord.conf"

    - name: supervisord.service copy
      become: true
      copy:
        remote_src: true
        src:  "/data-act/config/supervisord.service/supervisord.service"
        dest: "/usr/lib/systemd/system/supervisord.service"

    - name: modify supervisord configuration to add ENV variable
      ini_file:
        dest: "/data-act/backend/dataact{{ APP }}/config/supervisord.conf"
        section: "supervisord"
        option: environment
        value: "PYTHONPATH=%(ENV_PATH)s:/data-act/backend,env={{ vars['envs'][BRANCH]['env_long'] }}"


# Logging

    - name: create app json log if it doesn't exist
      file:
        path: /data-act/app.json-log
        state: touch

    - name: create app info log if it doesn't exist
      file:
        path: /data-act/info.log
        state: touch


# TODO: Assess this weird ownership redundancy with instance-image.yml

    - name: set owner of data-act folder to ec2-user
      shell: chown -R ec2-user /data-act
      become: true


# start/stop services

    - name: enable filebeat service
      become: true
      shell: systemctl enable filebeat

    - name: restart filebeat
      become: true
      shell: systemctl restart filebeat

    - name: enable supervisord service
      become: true
      shell: systemctl enable supervisord

    - name: restart supervisord
      become: true
      shell: systemctl restart supervisord
