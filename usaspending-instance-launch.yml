---
- hosts: "{{ HOST }}"

# You MUST provide a DOMAIN_NAME for ALLOWED_HOSTS and SSL

  vars:
    REPO: https://github.com/fedspendingtransparency/usaspending-api.git
    BRANCH: "{{ BRANCH }}"
    DOMAIN: "{{ DOMAIN_NAME }}"
    ALLOWED_HOSTS: "{{ ALLOWED_HOSTS }}"
    CODE_HOME: /data-act/backend
    CONFIG_HOME: /data-act/config
    STATIC_ASSETS_URL: https://ds-api-assets.s3-us-gov-west-1.amazonaws.com/

  become_method: sudo

  user: ec2-user

  tasks:

    - name: collect django static assets
      register: collectassets
      shell: python3.5 manage.py collectstatic --clear --no-input
      args:
        chdir: "{{ CODE_HOME }}"
      ignore_errors: true

    - name: upload django static assets
      when: collectassets | success
      shell: "aws s3 cp --recursive usaspending_api/static s3://ds-api-assets/{{ BRANCH }}/ --region us-gov-west-1"
      args:
        chdir: "{{ CODE_HOME }}"

    - name: set static assets path
      when: collectassets | success
      set_fact:
        STATIC_ASSETS_URL: "{{ STATIC_ASSETS_URL }}{{ BRANCH }}/"    

    - name: run migrations
      shell: python3.5 manage.py migrate
      args:
        chdir: "{{ CODE_HOME }}"

# /etc/nginx/nginx.conf

    - name: set nginx configuration path to SSL
      set_fact:
         nginx_path: "{{ CONFIG_HOME }}/nginx/nginx_ds_api.conf"

    - name: (remove later) run nginx as ec2-user
      lineinfile:
        dest: "{{ nginx_path }}"
        regexp: '\s*user.*;'
        line: 'user ec2-user;'

    - name: add server name to nginx config
      lineinfile:
        dest: "{{ nginx_path }}"
        regexp: '\s*server_name.*;'
        line: "\tserver_name {{ DOMAIN }};"

    - name: copy nginx config
      become: true
      shell: "cp {{ nginx_path }} /etc/nginx/nginx.conf"

# /config/uwsgi.ini

    - name: duplicate config file to uwsgi_db.ini
      become: true
      shell: "cp {{ CODE_HOME }}/config/uwsgi.ini {{ CODE_HOME }}/config/uwsgi_db.ini"
           
    - name: concatenate the db credentials to uwsgi
      become: true
      shell: "cat /etc/db_{{ BRANCH }}.sh >> {{ CODE_HOME }}/config/uwsgi_db.ini"

# settings.py

    - name: add static url from s3
      lineinfile:
        dest: "{{ CODE_HOME }}/usaspending_api/settings.py"
        regexp: '\s*STATIC_URL =.*'
        line: "STATIC_URL = '{{ STATIC_ASSETS_URL }}'"

    - name: turn debug off in production or staging
      when: BRANCH == 'master' or BRANCH == 'stg'
      lineinfile:
        dest: "{{ CODE_HOME }}/usaspending_api/settings.py"
        regexp: '\s*DEBUG =.*'
        line: "DEBUG = False"

    - name: add host to ALLOWED_HOSTS
      when: BRANCH == 'master' or BRANCH == 'stg'
      lineinfile:
        dest: "{{ CODE_HOME }}/usaspending_api/settings.py"
        regexp: '\s*ALLOWED_HOSTS =.*'
        line: "ALLOWED_HOSTS = ['{{ ALLOWED_HOSTS }}']"

# SSL certs

    - name: copy cert.pem
      become: true
      shell: "cp /etc/cert_{{ BRANCH }}.pem /etc/cert.pem"

    - name: copy cert.key
      become: true
      shell: "cp /etc/cert_{{ BRANCH }}.key /etc/cert.key"

# Finish

    - name: stop supervisord
      become: true
      shell: pkill supervisord
      ignore_errors: yes    

    - name: start supervisord
      become: true
      shell: "supervisord -c {{ CODE_HOME }}/config/supervisord.conf &"
      environment:
        PYTHONPATH: "{{ CODE_HOME }}"
      args:
        chdir: "{{ CODE_HOME }}/usaspending_api/"