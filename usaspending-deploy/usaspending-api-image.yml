#===============================  USASPENDING-API-IMAGE PLAYBOOK  ===============================#

---
- hosts: "{{ HOST }}"

  become_method: sudo
  user: ec2-user

  vars:
    BRANCH: "datadog-config"
    REPO: https://github.com/fedspendingtransparency/usaspending-api.git   
    CODE_HOME: /data-act/backend
    REQ_DIR: "{{ CODE_HOME }}/requirements"
    ansible_python_interpreter: "/usr/bin/python"

  tasks:

#=============================== Copy Git Credentials from S3 Bucket ===============================#

    - name: copy git credentials from S3 Bucket
      shell: "aws s3 cp s3://da-config/usaspending/id_rsa_usaspending_config /home/ec2-user/.ssh/ --region us-gov-west-1"

    - name: change mode for the id_rsa_usaspending_config
      become: true
      file:
        path: /home/ec2-user/.ssh/id_rsa_usaspending_config
        mode: 0400

#===============================  Git Checkout  ===============================#

    - name: checkout backend from git
      become: true
      git: 
        repo: "{{ REPO }}"
        version: "{{ BRANCH }}"
        dest: "/data-act/backend" 
        accept_hostkey: true 
        force: yes
    
    - name: checkout usaspending-config from git
      become: true
      git: 
        repo: "git@github.com:fedspendingtransparency/usaspending-config.git"
        dest: "/data-act/config"
        accept_hostkey: true 
        force: yes 
        key_file: "/home/ec2-user/.ssh/id_rsa_usaspending_config"

    - name: assign ownership of api to ec2-user
      become: true
      file:
        path: /data-act/ 
        owner: ec2-user
        recurse: yes

    - name: assign ownership of tmp to ec2-user
      become: true
      file:
        path: /tmp
        owner: ec2-user
        recurse: yes
  
#===============================  Install PIP Packages  ===============================#

    - name: update pip
      become: true 
      shell: pip3.5 install --upgrade pip 

    - name: install python packages based on requirements.txt
      become: true 
      pip:
        chdir: "{{ REQ_DIR }}"
        requirements: requirements.txt
        executable: pip3.5

    - name: install python packages based on caching_requirements.txt
      become: true 
      pip:
        chdir: "{{ REQ_DIR }}"
        requirements: caching_requirements.txt
        executable: pip3.5

    - name: install python packages based on server_requirements.txt
      become: true
      pip:
        chdir: "{{ REQ_DIR }}"
        requirements: server_requirements.txt
        executable: pip3.5

    - name: install python packages based on legacy_requirements.txt
      become: true
      pip:
        chdir: "{{ REQ_DIR }}"
        requirements: legacy_requirements.txt
        executable: pip2

    - name: ensure the correct directory structure for tmp nginx files
      become: true
      file: 
        path: /var/lib/nginx/tmp
        state: directory
        owner: ec2-user
        mode: "u+wrx"
        recurse: yes

    - name: set starting directory to CODE_HOME
      become: true
      lineinfile: 
        dest: "/home/ec2-user/.bashrc"
        line: "cd {{ CODE_HOME }}"
        insertafter: EOF

#===============================  Configure DataDog Key  ===============================#

    - name: copy datadog_key from S3
      become: true 
      shell: "aws s3 cp s3://da-config/shared/datadog_key.yml /etc/ --region us-gov-west-1"

    - name: load datadog_key var
      include_vars: /etc/datadog_key.yml

    - name: add Datadog license key to datadog.yaml
      become: true
      lineinfile:
        dest: "/data-act/config/deploy/datadog.yaml"
        regexp: '\s*api_key: .*'
        line: "api_key: {{ DD_KEY }}"

    - name: copy datadog.yml to it's home location
      become: true
      copy: 
        src: "/data-act/config/deploy/datadog.yaml"
        dest: "/etc/datadog-agent/datadog.yaml"

#===============================  Logrotate  ===============================#

    - name: move logrotate into nightly cron
      become: true
      copy:
        src:  "/data-act/config/deploy/elk/usaspending-api.logrotate"
        dest: "/etc/logrotate.d/usaspending-api"
        remote_src: true

#===============================  EOF  ===============================#
