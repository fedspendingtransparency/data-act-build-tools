---
- hosts: "{{ HOST }}"

  vars:
    BRANCH: "{{ BRANCH }}"

    REPO: https://github.com/fedspendingtransparency/usaspending-api.git   
    CODE_HOME: /data-act/backend
    REQ_DIR: "{{ CODE_HOME }}/requirements"

  become_method: sudo

  user: ec2-user

  tasks:

# Git Checkout

    - name: Checkout backend from git
      become: true
      git: repo={{ REPO }}
           version={{ BRANCH }}  
           dest=/data-act/backend 
           accept_hostkey=true 
           force=yes

    - name: Checkout config from git
      become: true
      git: repo=git@github.com:fedspendingtransparency/data-act-broker-config.git 
           dest=/data-act/config 
           accept_hostkey=true 
           force=yes 
           key_file="/home/ec2-user/.ssh/id_rsa"

    - name: assign ownership of api to ec2-user
      become: true
      file: path=/data-act owner=ec2-user recurse=yes

    - name: assign ownership of tmp to ec2-user
      become: true
      file: path=/tmp owner=ec2-user recurse=yes
  
# Install Packages  

    - name: update pip
      become: true 
      shell: pip3.5 install --upgrade pip 

    - name: copy requirements.txt (to check for changes)
      become: true 
      copy:
        src:  "{{ REQ_DIR }}/requirements.txt"
        dest: "{{ REQ_DIR }}/requirements_copy.txt"
        remote_src: true
      register: requirements_txt
      
    - name: install python packages based on requirements.txt
      become: true 
      when: requirements_txt.changed
      pip: chdir="{{ REQ_DIR }}" requirements="requirements.txt" executable=pip3.5

    - name: copy caching_requirements.txt (to check for changes)
      become: true 
      copy:
        src:  "{{ REQ_DIR }}/caching_requirements.txt"
        dest: "{{ REQ_DIR }}/caching_requirements_copy.txt"
        remote_src: true
      register: caching_requirements_txt
    - name: install python packages based on caching_requirements.txt
      become: true 
      when: caching_requirements_txt.changed
      pip: chdir="{{ REQ_DIR }}" requirements="caching_requirements.txt" executable=pip3.5

    - name: copy server_requirements.txt (to check for changes)
      become: true 
      copy:
        src:  "{{ REQ_DIR }}/server_requirements.txt"
        dest: "{{ REQ_DIR }}/server_requirements_copy.txt"
        remote_src: true
      register: server_requirements_txt
    - name: install python packages based on server_requirements.txt
      become: true
      when: server_requirements_txt.changed
      pip: chdir="{{ REQ_DIR }}" requirements="server_requirements.txt" executable=pip3.5

    - name: copy legacy_requirements.txt (to check for changes)
      become: true 
      copy:
        src:  "{{ REQ_DIR }}/legacy_requirements.txt"
        dest: "{{ REQ_DIR }}/legacy_requirements_copy.txt"
        remote_src: true
      register: legacy_requirements_txt
    - name: install python packages based on legacy_requirements.txt
      become: true
      when: legacy_requirements_txt.changed
      pip: chdir="{{ REQ_DIR }}" requirements="legacy_requirements.txt" executable=pip2

    - name: ensure the correct directory structure for tmp nginx files
      become: true
      file: 
        path: /var/lib/nginx/tmp
        state: directory
        owner: ec2-user
        mode: "u+wrx"
        recurse: yes

    - name: set starting directory to CODE_HOME
      become: true
      lineinfile: 
        dest: /home/ec2-user/.bashrc
        line: "cd {{ CODE_HOME }}"
        insertafter: EOF 


