---
- hosts: "{{ HOST }}"

# You MUST provide a DOMAIN_NAME for ALLOWED_HOSTS and SSL

  vars:
    ALLOWED_HOSTS: "{{ ALLOWED_HOSTS }}"

    ## Branch options: sandbox, dev, stg, master
    BRANCH: "{{ BRANCH }}"
    DOMAIN: "{{ DOMAIN }}"

    ## Used only for filebeat: 'envs' is used to translate 
    ## BRANCH options above into filebeat.yml index
    envs:
      master: {env_long: prod, env_short: prod}
      staging: {env_long: staging, env_short: stg}
      dev: {env_long: dev, env_short: dev}
      sandbox: {env_long: sandbox, env_short: sbx}

    CODE_HOME: /data-act/backend
    CONFIG_HOME: /data-act/config

    STATIC_ASSETS_URL: "{{ lookup('file', 's3url') }}"

  become_method: sudo

  user: ec2-user

  tasks:

  # /etc/nginx/nginx.conf

    - name: set nginx configuration path to SSL
      set_fact:
         nginx_path: "{{ CONFIG_HOME }}/nginx/nginx_ds_api.conf"

    - name: (remove later) run nginx as ec2-user
      lineinfile:
        dest: "{{ nginx_path }}"
        regexp: '\s*user.*;'
        line: 'user ec2-user;'

    - name: add server name to nginx config
      lineinfile:
        dest: "{{ nginx_path }}"
        regexp: '\s*server_name.*;'
        line: "\tserver_name {{ DOMAIN }};"    

    - name: copy nginx config
      become: true
      copy:
        src:  "{{ nginx_path }}"
        dest: "/etc/nginx/nginx.conf"
        remote_src: true

  # config/uwsgi.ini

    - name: duplicate config file to uwsgi_db.ini
      become: true
      copy:
        src:  "{{ CODE_HOME }}/config/uwsgi.ini"
        dest: "{{ CODE_HOME }}/config/uwsgi_db.ini"
        remote_src: true
           
    - name: concatenate the db credentials to uwsgi
      become: true
      shell: "echo -n env=DATABASE_URL= | cat - /etc/db_{{ BRANCH }}.sh >> {{ CODE_HOME }}/config/uwsgi_db.ini"

 # usaspending_api/settings.py

    - name: add static url from s3
      lineinfile:
        dest: "{{ CODE_HOME }}/usaspending_api/settings.py"
        regexp: '\s*STATIC_URL =.*'
        line: "STATIC_URL = '{{ STATIC_ASSETS_URL }}{{ BRANCH }}/'"

    - name: turn debug off in production or staging
      when: BRANCH == 'master' or BRANCH == 'stg'
      lineinfile:
        dest: "{{ CODE_HOME }}/usaspending_api/settings.py"
        regexp: '\s*DEBUG =.*'
        line: "DEBUG = False" 

    - name: add host to ALLOWED_HOSTS
      lineinfile:
        dest: "{{ CODE_HOME }}/usaspending_api/settings.py"
        regexp: '\s*ALLOWED_HOSTS =.*'
        line: "ALLOWED_HOSTS = ['{{ ALLOWED_HOSTS }}']"

 # SSL Certificates

    - name: copy cert.pem
      become: true
      copy:
        src:  "/etc/cert_{{ BRANCH }}.pem"
        dest: "/etc/cert.pem"
        remote_src: true

    - name: copy cert.key
      become: true
      copy:
        src:  "/etc/cert_{{ BRANCH }}.key"
        dest: "/etc/cert.key"
        remote_src: true

  # config/filebeat/filebeat.yml

    - name: copy filebeat config
      become: true
      copy:
        src:  "{{ CONFIG_HOME }}/filebeat/filebeat-usaspending.yml"
        dest: "/etc/filebeat/filebeat.yml"
        remote_src: true
    - name: update filebeat config to set correct index
      become: true
      replace:
        dest: "/etc/filebeat/filebeat.yml"
        regexp: 'index: filebeat'
        replace: "index: {{ vars['envs'][BRANCH]['env_short'] }}-filebeat"

 # Start/Stop Services     

    - name: stop filebeat
      become: true
      shell: systemctl stop filebeat
      ignore_errors: true

    - name: start filebeat
      become: true
      shell: systemctl start filebeat  

    - name: stop supervisord
      become: true
      shell: pkill supervisord
      ignore_errors: yes    

    - name: start supervisord
      become: true
      shell: "supervisord -c {{ CODE_HOME }}/config/supervisord.conf &"
      environment:
        PYTHONPATH: "{{ CODE_HOME }}"
      args:
        chdir: "{{ CODE_HOME }}/usaspending_api/"      
